#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Mattermost —Å–µ—Ä–≤–µ—Ä–æ–º
"""

import ssl
import socket
import requests
import urllib3
from urllib.parse import urlparse
import os
from dotenv import load_dotenv

def check_ssl_certificate(hostname, port=443):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–µ—Ä–≤–µ—Ä–∞"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: {hostname}:{port}")
    print("-" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º SSL –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context = ssl.create_default_context()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        with socket.create_connection((hostname, port), timeout=10) as sock:
            with context.wrap_socket(sock, server_hostname=hostname) as ssock:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
                cert = ssock.getpeercert()
                
                print(f"‚úÖ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
                print(f"   –í–µ—Ä—Å–∏—è TLS: {ssock.version()}")
                print(f"   –®–∏—Ñ—Ä: {ssock.cipher()}")
                
                # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
                subject = dict(x[0] for x in cert['subject'])
                issuer = dict(x[0] for x in cert['issuer'])
                
                print(f"\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ:")
                print(f"   –í—ã–¥–∞–Ω –¥–ª—è: {subject.get('commonName', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"   –í—ã–¥–∞–Ω: {issuer.get('organizationName', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"   –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω —Å: {cert.get('notBefore', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"   –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ: {cert.get('notAfter', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–º–µ–Ω–∞
                san = cert.get('subjectAltName', [])
                if san:
                    print(f"   –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–º–µ–Ω–∞: {', '.join([name[1] for name in san])}")
                
                return True
                
    except ssl.SSLError as e:
        print(f"‚ùå SSL –æ—à–∏–±–∫–∞: {e}")
        return False
    except socket.timeout:
        print(f"‚ùå –¢–∞–π–º–∞—É—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def check_http_response(url, verify_ssl=True):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç HTTP –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞"""
    print(f"\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–∞: {url}")
    print("-" * 50)
    
    try:
        # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if not verify_ssl:
            urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
        
        response = requests.get(url, timeout=10, verify=verify_ssl)
        
        print(f"‚úÖ HTTP –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –°–µ—Ä–≤–µ—Ä: {response.headers.get('Server', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
        print(f"   –¢–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {response.headers.get('Content-Type', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
        
        if not verify_ssl:
            print(f"‚ö†Ô∏è  SSL –ø—Ä–æ–≤–µ—Ä–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
        
        return True
        
    except requests.exceptions.SSLError as e:
        print(f"‚ùå SSL –æ—à–∏–±–∫–∞ HTTP: {e}")
        return False
    except requests.exceptions.ConnectionError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    except requests.exceptions.Timeout:
        print(f"‚ùå –¢–∞–π–º–∞—É—Ç HTTP –∑–∞–ø—Ä–æ—Å–∞")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê SSL –°–û–ï–î–ò–ù–ï–ù–ò–Ø –° MATTERMOST")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    load_dotenv()
    
    mattermost_url = os.getenv('MATTERMOST_URL', '')
    ssl_verify = os.getenv('MATTERMOST_SSL_VERIFY', 'true').lower() == 'true'
    
    if not mattermost_url:
        print("‚ùå MATTERMOST_URL –Ω–µ –∑–∞–¥–∞–Ω –≤ .env —Ñ–∞–π–ª–µ")
        print("–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π URL: https://mm.1bit.support")
        mattermost_url = "https://mm.1bit.support"
    
    print(f"üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   URL: {mattermost_url}")
    print(f"   SSL –ø—Ä–æ–≤–µ—Ä–∫–∞: {'–≤–∫–ª—é—á–µ–Ω–∞' if ssl_verify else '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}")
    print()
    
    # –ü–∞—Ä—Å–∏–º URL
    parsed = urlparse(mattermost_url)
    hostname = parsed.hostname
    port = parsed.port or (443 if parsed.scheme == 'https' else 80)
    
    if not hostname:
        print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –≤ MATTERMOST_URL")
        return False
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    ssl_ok = check_ssl_certificate(hostname, port)
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP –æ—Ç–≤–µ—Ç —Å SSL –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    if ssl_ok:
        http_ok = check_http_response(mattermost_url, verify_ssl=True)
    else:
        print(f"\n‚ö†Ô∏è  SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–±—É–µ–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL...")
        http_ok = check_http_response(mattermost_url, verify_ssl=False)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò")
    print("=" * 60)
    
    if ssl_ok and http_ok:
        print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´")
        print("   SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
        print("   HTTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: MATTERMOST_SSL_VERIFY=true")
        
    elif http_ok and not ssl_ok:
        print("‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•")
        print("   HTTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("   SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã")
        print("   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:")
        print("     - –ò—Å–ø—Ä–∞–≤–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ)")
        print("     - –í—Ä–µ–º–µ–Ω–Ω–æ: MATTERMOST_SSL_VERIFY=false")
        
    else:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–´ –° –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï–ú")
        print("   –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –∏–º–µ–µ—Ç —Å–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")
        print("   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:")
        print("     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞")
        print("     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏/—Ñ–∞–π—Ä–≤–æ–ª–∞")
        print("     - –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–µ—Ä–≤–µ—Ä–∞")
    
    print("\nüí° –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´ –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print(f"   curl -I {mattermost_url}")
    print(f"   openssl s_client -connect {hostname}:{port}")
    print(f"   telnet {hostname} {port}")
    
    return ssl_ok and http_ok

if __name__ == "__main__":
    try:
        success = main()
        exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\nüõë –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        exit(1)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        exit(1) 